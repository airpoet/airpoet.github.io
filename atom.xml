<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>A.P的文艺杂谈</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://airpoet.github.io/"/>
  <updated>2018-05-27T11:12:32.119Z</updated>
  <id>https://airpoet.github.io/</id>
  
  <author>
    <name>airpoet</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux学习笔记-2</title>
    <link href="https://airpoet.github.io/2018/05/26/Linux/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/"/>
    <id>https://airpoet.github.io/2018/05/26/Linux/Linux学习笔记-1/</id>
    <published>2018-05-26T15:37:15.310Z</published>
    <updated>2018-05-27T11:12:32.119Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-gt-初识Linux"><a href="#1-gt-初识Linux" class="headerlink" title="1&gt;  初识Linux"></a>1&gt;  初识Linux</h2><p>####一、Linux介绍</p><p>Linux系统是一套<strong>免费使用</strong>和<strong>自由传播</strong>的<strong>类UNIX操作系统</strong>（主要用在服务器上），是一个基于<strong>POSIX</strong>和<strong>UNIX</strong>的<strong>多用户</strong>、<strong>多任务</strong>、<strong>支持多线程</strong>和<strong>多CPU</strong>的操作系统。它能运行主要的UNIX工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了UNIX以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。</p><p><strong>UNIX：操作系统，是美国AT&amp;T公司贝尔实验室于1969年完成的操作系统，最早由肯·汤普逊（Ken Thompson），丹尼斯·里奇（Dennis Ritchie）开发</strong>。在1971年首次对外发布，刚好在1971，<strong>丹尼斯·里奇（Dennis Ritchie）发明了C语言</strong>，后来在<strong>1973，Unix被他用C语言重新编写</strong>。Unix前身源自于MultiCS，叫UniCS，后来改名叫Unix。</p><p><strong>POSIX</strong>：可移植操作系统接口（英语：Portable Operating System Interface of UNIX，缩写为POSIX），是<strong>IEEE（电气和电子工程师协会）</strong>为要在各种UNIX操作系统上运行软件，而定义API的一系列互相关联的标准的总称。</p><p><strong>GNU</strong>：1983年，Richard Stallman（理查德·马修·斯托曼）创立GNU计划。<strong>一套完全自由的操作系统</strong>，其内容软件完全以GPL方式发布。这个操作系统是GNU计划的主要目标（发展出一套完整的开放源代码操作系统来取代Unix），名称来自GNU\’s Not Unix!的递归缩写。</p><p><strong>GPL</strong>：一种GNU通用公共许可协议，为保证GNU软件可以自由的使用、复制、修改和发布，所有的GNU软件都有一份在禁止其他人添加任何限制的情况下授权所有权利给任何人的协议条款，是一个被广泛使用的自由软件许可协议条款，保证终端用户运行、学习、分享（复制）及编辑软件之自由，GPL是自由软件和开源软件的最流行许可证，特色表现：</p><p>•取得软件与原始码：您可以根据自己的需求来执行这个自由软件</p><p>•复制：您可以自由的复制该软件</p><p>•修改：您可以将取得的原始码进行程序修改工作，使之适合您的工作</p><p>•再发行：您可以将您修改过的程序，再度的自由发行，而不会与原先的撰写者冲突</p><p>•回馈：您应该将您修改过的程序代码回馈于社群</p><p><strong>==不同许可证的区别==</strong></p><p><img src="http://p6i5vzkfk.bkt.clouddn.com/study/2018-05-26-152543.png" alt=""></p><p>1985年，Richard Stallman又创立了自由软件基金会（Free Software Foundation，FSF）来为GNU计划提供技术、法律以及财政支持。</p><p>1990年，GNU计划开发主要项目有Emacs（文本编辑器）、GCC（GUN Compiler Collection，GNU编译器集合）、Bash等，GCC是一套GNU开发的编程语言编译器。还有开发一些UNIX系统的程序库和工具。</p><p><strong>Linux操作系统诞生于1991年10月5日</strong>（这是第一次正式向外公布时间），与UNIX兼容，并在GPL条款下发布。现在，Linux产生了许多不同的Linux发行版本，但它们都使用了Linux内核。Linux可安装在各种计算机硬件设备中，比如手机、平板电脑、路由器、视频游戏控制台、台式计算机、大型机和超级计算机。</p><p>1992年，Linux与其他GUN软件结合，完全自由的GNU/Linux操作系统正式诞生，简称Linux</p><p><strong>==Linux的基本思想有两点：==</strong></p><p><strong>第一，一切都是文件</strong></p><p><strong>第二，每个软件都有确定的用途</strong></p><p>与Unix思想十分相近。</p><p>####二、Linux特点</p><p>1、分时的多用户、多任务操作系统</p><p>2、多数网络协议支持、方便的远程管理</p><p>3、强大的内存管理和文件系统管理</p><p>4、大量的可用的软件和免费的软件</p><p>5、优良的稳定性和安全性</p><p>6、良好的可移植性和灵活性</p><p>7、可供选择的厂商多</p><p>####三、Linux操作系统架构</p><p><img src="http://p6i5vzkfk.bkt.clouddn.com/study/2018-05-26-152728.png" alt=""></p><p>补充：linux内核必须加上一个”界面”软件，才能让用户去使用，”界面”分两类：</p><p>a、命令行界面CLI SHELL（有很多种，最流行的一种是bash shell）</p><p>b、图形界面GUI SHELL（也有很多种，目前最流行的有两种：gnome和kde）</p><p>####四、Linux内核</p><p>严格来讲，Linux不是一个操作系统，Linux只是一个操作系统中的内核。</p><p>内核建立了计算机软件与硬件之间通讯的平台，内核提供系统服务，比如文件管理、虚拟内存、设备I/O、进程管理等。</p><p>内核官网：<a href="http://www.kernel.org/" target="_blank" rel="noopener">[http://www.kernel.org/]{.underline}</a>。目前最新的内核版本：4.13.5</p><p>要注意区分linux发型版本和linux内核版本。两者不是同一个事物</p><p><strong>下面这位是Linux内核的作者：</strong></p><p><img src="http://p6i5vzkfk.bkt.clouddn.com/study/2018-05-26-153055.png" alt=""></p><p><strong>这是Linux的logo</strong></p><p><img src="http://p6i5vzkfk.bkt.clouddn.com/study/2018-05-26-153046.png" alt="logo"></p><p>####五、常见发行版</p><p><strong>红帽企业系统（RedHat Enterprise Linux, RHEL）</strong></p><p>全球最大的开源技术厂商，全世界内使用最广泛的Linux发布套件，</p><p>提供性能与稳定性极强的Linux套件系统并拥有完善的全球技术支持。</p><p>官网：<a href="http://www.redhat.com" target="_blank" rel="noopener">[http://www.redhat.com]{.underline}</a></p><p><strong>社区企业操作系统（CentOS）</strong></p><p>最初是将红帽企业系统”重新编译/发布”给用户免费使用而广泛使用，</p><p>当前已正式加入红帽公司并继续保持免费（随RHEL更新而更新）。</p><p>官网：<a href="http://www.centos.org/" target="_blank" rel="noopener">[http://www.centos.org/]{.underline}</a></p><p><strong>红帽用户桌面版（Fedora [Linux]）</strong></p><p>最初由红帽公司发起的桌面版系统套件（目前已经不限于桌面版），</p><p>用户可免费体验到最新的技术或工具，而功能成熟后加入到RHEL中。</p><p>官网：<a href="http://fedora.redhat.com" target="_blank" rel="noopener">[http://fedora.redhat.com]{.underline}</a></p><p><strong>国际化组织的开源操作系统（Debian）</strong></p><p>提供超过37500种不同的自由软件且拥有很高的认可度，</p><p>对于各类内核架构支持性良好，稳定性、安全性强更有免费的技术支持。</p><p>官网：<a href="http://www.debian.org/" target="_blank" rel="noopener">[http://www.debian.org/]{.underline}</a></p><p><strong>基于Debian的桌面版（Ubuntu）</strong></p><p>Ubuntu是一款基于Debian派生的产品，对新款硬件具有极强的兼容能力。</p><p>普遍认为Ubuntu与Fedora都是极其出色的LINUX桌面系统。</p><p>官网：<a href="http://www.ubuntulinux.org/" target="_blank" rel="noopener">[http://www.ubuntulinux.org/]{.underline}</a></p><p>当然还有国内的<strong>国防科技大学发行麒麟kylin</strong>和<strong>中科院发行红旗RedFlag</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-gt-初识Linux&quot;&gt;&lt;a href=&quot;#1-gt-初识Linux&quot; class=&quot;headerlink&quot; title=&quot;1&amp;gt;  初识Linux&quot;&gt;&lt;/a&gt;1&amp;gt;  初识Linux&lt;/h2&gt;&lt;p&gt;####一、Linux介绍&lt;/p&gt;
&lt;p&gt;Linux
      
    
    </summary>
    
      <category term="Linux" scheme="https://airpoet.github.io/categories/Linux/"/>
    
      <category term="学习笔记" scheme="https://airpoet.github.io/categories/Linux/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="原创" scheme="https://airpoet.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="技术" scheme="https://airpoet.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="Linux" scheme="https://airpoet.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习笔记-2</title>
    <link href="https://airpoet.github.io/2018/05/25/Linux/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2/"/>
    <id>https://airpoet.github.io/2018/05/25/Linux/Linux学习笔记-2/</id>
    <published>2018-05-25T00:17:16.157Z</published>
    <updated>2018-05-27T08:34:06.675Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-系统服务管理"><a href="#1-系统服务管理" class="headerlink" title="1. 系统服务管理"></a>1. 系统服务管理</h3><ol><li>检查本机<code>httpd</code>服务是否开启, 使用命令<code>service httpd status</code></li><li>开启/关闭/重启 httpd服务 <code>service httpd start/stop/restart</code></li><li>查看所有的服务状态 <code>service --status-all</code></li><li>过滤出某个服务<code></code>service –status-all | grep httpd`</li><li>防火墙服务  <code>sevice iptables status/stop/start/restart</code></li></ol><p><strong>配置后台服务进程开机自启</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启开机自启http进程</span></span><br><span class="line">-&gt;  chkconfig httpd on</span><br><span class="line"><span class="comment"># 查看httpd的开机自启状态</span></span><br><span class="line">-&gt;  chkconfig --list | grep httpd</span><br><span class="line">httpd    0:关闭1:关闭2:启用3:启用4:启用5:启用6:关闭</span><br></pre></td></tr></table></figure><p>缺省系统运行级别</p><ul><li>0 为停机，机器关闭。</li><li>1 为单用户模式，就像Win9x下的安全模式类似。</li><li>2  为多用户模式，但是没有NFS支持。 </li><li>3  为完整的多用户模式，是标准的运行级。</li><li>4 一般不用，在一些特殊情况下可以用它来做一些事情。例如在笔记本 电脑的电池用尽时，可以切换到这个模式来做一些设置。</li><li>5  就是X11，进到X Window系统了。</li><li>6  为重启，运行init 6机器就会重启。</li></ul><p>Centos中时区</p><ul><li><p>当前正在使用的时d区文件位于 <code>/etc/localtime</code></p></li><li><p>其他时区文件则位于 <code>/usr/share/zoneinfo</code></p></li><li><p>中国时区使用 <code>/usr/share/zoneinfo/Asia/Shanghai</code></p></li><li><p>更改时区 <code>cp /usr/share/zoneinfo/Asia/Shanghai  /etc/localtime</code></p></li><li><p>如果没有  Asia/Shanghai 时区文件，请使用tzselect命令去生成时区文件，生成好的时区文件就在 <code>/usr/share/zoneinfo</code>目录下</p></li></ul><p><strong>修改系统时间</strong></p><ul><li><code>date</code>  : 直接查看时间</li><li><code>date -s</code>  : 手动设置时间</li><li><code>ntpdate time.windows.www</code>  : 同步时间服务器时间</li></ul><h3 id="2-简单磁盘管理"><a href="#2-简单磁盘管理" class="headerlink" title="2. 简单磁盘管理"></a>2. 简单磁盘管理</h3><ul><li><p>df：列出文件系统的整体磁盘使用量</p><ul><li><p>-h  人性化的列出文件的大小等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-&gt; <span class="comment"># df -h /dev/sr0</span></span><br><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/sr0        3.7G  3.7G     0 100% /media/cdrom</span><br></pre></td></tr></table></figure></li></ul></li><li><p>du：检查磁盘空间使用量</p></li><li><p>fdisk：用于磁盘分区</p></li></ul><h3 id="3-文件的基本属性-TODO"><a href="#3-文件的基本属性-TODO" class="headerlink" title="3. 文件的基本属性  - TODO"></a>3. 文件的基本属性  - TODO</h3><p><strong>前缀的含义</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看目录的权限</span></span><br><span class="line">-&gt; <span class="comment"># ll -d /var/www/html/localyum</span></span><br><span class="line"></span><br><span class="line">drwxr-xr-x.  7 root root  4096 5月  25 07:50 autojump</span><br><span class="line">-rw-r--r--.  1 root root 50434 5月  23 10:11 install.log</span><br><span class="line">lrwxrwxrwx. 1 root root   13 5月  25 21:04 localyum -&gt; /media/cdrom/</span><br></pre></td></tr></table></figure><ul><li>当为[ <em>d</em> ]则是目录</li><li>当为[ <em>-</em> ]则是文件；</li><li>若是[ <em>l</em> ]则表示为链接文档(link file)；</li><li>若是[ <em>b</em> ]则表示为装置文件里面的可供储存的接口设备(可随机存取装置)；</li><li>若是[ <em>c</em> ]则表示为装置文件里面的串行端口设备，例如键盘、鼠标(一次性读取装置);</li></ul><p><strong>r、w、x 对于文件和目录的含义</strong> </p><table><thead><tr><th></th><th>权限</th><th>对文件的含义</th><th>对目录的含义</th></tr></thead><tbody><tr><td>r</td><td>读权限</td><td>可以查看文件内容</td><td>可以列出目录中的内容</td></tr><tr><td>w</td><td>写权限</td><td>可以修改文件内容</td><td>可以再目录中创建、删除文件</td></tr><tr><td>x</td><td>执行权限</td><td>可以执行文件</td><td>可以进入目录</td></tr></tbody></table><h3 id="4-软件安装-TODO"><a href="#4-软件安装-TODO" class="headerlink" title="4. 软件安装 TODO"></a>4. 软件安装 TODO</h3><h5 id="1-二进制发布包安装-TODO"><a href="#1-二进制发布包安装-TODO" class="headerlink" title="1. 二进制发布包安装 TODO:"></a>1. 二进制发布包安装 TODO:</h5><p>软件已经针对具体平台编译打包发布，只要解压，修改配置即可</p><p><a href="https://app.yinxiang.com/shard/s37/nl/7399077/c670ec9b-1d33-41cc-bda9-035ce287553c/" target="_blank" rel="noopener">安装jdk</a> , 安装<code>tomcat</code>也一样  TODO: </p><ol><li>通过 ftp工具把 jdk传到 linux服务器</li><li>创建一个  <code>/var/www/html/soft/jdk8</code> 的软链接, 指向服务器中的安装包 —— 这一步失败了</li></ol><p>#####2. 源码编译安装 TODO:</p><p>软件以源码工程的形式发布，需要获取到源码工程后用相应开发工具进行编译打包部署</p><p><a href="https://app.yinxiang.com/shard/s37/nl/7399077/98a384b8-94cb-4521-b919-f502c39ef891/" target="_blank" rel="noopener">安装/卸载 redis</a> </p><p><strong>卸载:</strong> </p><ol><li><p>首先查看redis-server是否启动 </p><p><code>ps aux | grep redis</code></p></li><li><p>有的话, 关闭这些进程 </p><p><code>kill -9 进程pid</code></p></li><li><p>删除redis相应的文件夹就可以了。</p><p><code>find / -name redis</code></p></li></ol><p><strong>安装:</strong> </p><ol><li><p>拷贝到/usr/local, 解压, 删掉原安装包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf redis-3.0.0.tar.gz </span><br><span class="line">rm redis-3.0.0.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>检查运行环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检测一下是否可以安装</span></span><br><span class="line">make</span><br><span class="line">make <span class="built_in">test</span></span><br></pre></td></tr></table></figure></li><li><p>安装到指定目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make PREFIX=/root/apps/redis install</span><br></pre></td></tr></table></figure></li><li><p>拷贝配置信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/<span class="built_in">local</span>/redis-3.0.0/redis.conf  /usr/<span class="built_in">local</span>/redis/bin</span><br></pre></td></tr></table></figure></li><li><p>启动</p><ol><li><p>前端模式  <code>bin/redis-server</code></p></li><li><p>后端模式启动 </p><p>修改<code></code>redis.conf<code>配置文件，</code>daemonize yes` 以后端模式启动</p></li></ol></li><li><p>: TODO</p></li></ol><h5 id="3-RPM发布包"><a href="#3-RPM发布包" class="headerlink" title="3. RPM发布包"></a>3. RPM发布包</h5><p>软件已经按照RedHat（Redhat Package Manager）的包管理工具规范RPM进行打包发布，需要获取到相应的软件RPM发布包，然后用rpm命令进行安装</p><p><a href="https://app.yinxiang.com/shard/s37/nl/7399077/fc7f21e7-7a67-4133-8c69-4c2c98510f9f/" target="_blank" rel="noopener">Mysql安装</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm安装命令</span></span><br><span class="line">1、安装包：rpm -ivh 包名</span><br><span class="line">参数：</span><br><span class="line">-i ：安装的意思</span><br><span class="line">-v ：可视化</span><br><span class="line">-h ：显示安装进度</span><br><span class="line">另外在安装一个rpm包时常用的附带参数有：</span><br><span class="line">--force 强制安装，即使覆盖属于其他包的文件也要安装</span><br><span class="line">--nodeps 当要安装的rpm包依赖其他包时，即使其他包没有安装，也要安装这个包</span><br><span class="line"></span><br><span class="line">2、升级包：rpm -Uvh filename</span><br><span class="line">-U 升级</span><br><span class="line"></span><br><span class="line">3、卸载包rpm -e filename （这里的filename是通过rpm的查询功能所查询到的）</span><br><span class="line"></span><br><span class="line">4、查询一个包是否安装：rpm -q  包名（这里的包名，是不带有平台信息以及后缀名的）</span><br><span class="line"></span><br><span class="line">5.查询当前安装的所有rpm包：rpm -qa</span><br><span class="line">查询当前安装的和sql相关的包：rpm -qa | grep <span class="string">'sql'</span></span><br><span class="line">查询sqlite安装路径：rpm -ql sqlite</span><br></pre></td></tr></table></figure><h3 id="5-设置本地-网络yum源"><a href="#5-设置本地-网络yum源" class="headerlink" title="5. 设置本地/网络yum源"></a>5. 设置本地/网络yum源</h3><ol><li><p>首先检查虚拟机的 CD/DVD驱动器是否有挂载iso镜像文件</p></li><li><p>找到挂载源的位置 在 /dev/sr0下, 将其挂载到/mnt下创建的cdrom文件夹下</p><p><code>mount -t iso9660 -o ro /dev/sr0 /mnt/cdrom</code></p></li><li><p>配置开机挂载 , <code>vi /etc/fstab</code>, 增加一行</p><p><code>/dev/cdrom   /mnt/cdrom   iso9660 defaults   0 0</code></p></li><li><p>创建软连接, 设置可以通过web访问</p><p><code>ln -s /mnt/cdrom/ /var/www/html/yumsorurce</code></p></li><li><p>修改<code>etc/yum.repos.d</code>中的文件<code>entOS-Media.repo</code>中的<code>enabled=1</code>, 开启从本地寻找, 因为文件中, 原本就配置了<code>baseurl:  file:///media/cdrom/</code>, 而我们自己创建了<code>media/cdrom</code>这个目录, 所以就可以从这里面读取了</p></li><li><p>执行<code>yum repolist</code>, 发现已经能读取出media中的repo了, 大功告成</p><p><code>c6-media     CentOS-6 - Media      6,575</code></p></li><li><p>tips: 个人觉得还是配置个网络源比较好, 比如163/阿里的. </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 操作步骤</span></span><br><span class="line"><span class="comment"># 1.备份原来的Base源</span></span><br><span class="line"><span class="built_in">cd</span> /etc/yum.repos.d/</span><br><span class="line">mv CentOS-Base.repo CentOS-Base.repo_bak</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 下载网易/阿里源 到/etc/yum.repos.d下, 替换掉原本的</span></span><br><span class="line"><span class="comment"># 网易源</span></span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.<span class="built_in">help</span>/CentOS6-Base-163.repo</span><br><span class="line"><span class="comment"># 阿里源</span></span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo</span><br><span class="line"></span><br><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br><span class="line"></span><br><span class="line"><span class="comment"># yum使用</span></span><br><span class="line">yum update 􏻦􏻧􏷉􏷊升级系统</span><br><span class="line">yum install -y xxx  直接安装, 不用确认</span><br><span class="line">􏻈yum update ~ 􏻦􏻧􏸻􏹺􏷜 升级指定软件包</span><br><span class="line">yum remove ~ 􏺌􏷎􏸻􏹺􏷜􏷕 卸载指定软件</span><br></pre></td></tr></table></figure></li><li><p>挂载, 配置源的其他说明</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关于挂载</span></span><br><span class="line"><span class="comment"># lrwxrwxrwx. 1 root root           3 5月  25 16:47 cdrom -&gt; sr0</span></span><br><span class="line">cdrom其实是sr0的软链接, 因此直接找sr0即可</span><br><span class="line"></span><br><span class="line"><span class="comment"># 挂载的基本语法</span></span><br><span class="line">mont -t  iso9660  -o ro(只读) /dev/sr0  /mnt/cdrom</span><br><span class="line">(挂载类型)   (挂载方式)  (挂载源)  (挂载点)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载的语法</span></span><br><span class="line">umount /mnt/cdrom </span><br><span class="line"></span><br><span class="line">如果卸载时遇到 umount: /mnt/cdrom: device is busy.</span><br><span class="line">解决方式:</span><br><span class="line">1. 查找哪个进程在用:  fuser /mnt/cdrom</span><br><span class="line">2. 查找进程: ps -ef | grep 进程号</span><br><span class="line">3. 插死进程: <span class="built_in">kill</span> -9 进程号, 如果是root用户, 可能会断开连接, 需要重连</span><br><span class="line">4. 然后继续 umount, 如果不行, 就强制卸载 umount -f /mnt/cdrom</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关于etc/yum.repos.d 中文件的说明</span></span><br><span class="line">      CentOS-Base.repo：有网的环境下默认使用这个，这个是第一优先级。因为没网，所以修改文件名，设置成备份文件。这样系统就会使用第二优先级的文件。</span><br><span class="line">      CentOS-Media.repo：没网的环境下使用这个，在上图中会发现他默认配置了4个路径，第4个yumsource是我自己加的。意思是说，如果系统检测yum使用了离线安装，那么会从上到下从这4个路径中查找安装软件。所以我们只要把光盘挂载在这四个目录下的任意一个目录即可。同时，该配置文件默认是不启用的，如果想使用需要修改倒数第二行的enabled为1，否则该文件无效。</span><br><span class="line">      </span><br><span class="line"><span class="comment"># /mnt &amp; /media 目录的区别</span></span><br><span class="line">media：挂载一些移动设备，例如光盘，U盘等。</span><br><span class="line">mnt：  挂载一些硬盘等设备。所以我们的光盘应该挂载在media目录下，从yum给的默认配置文件也能看出。</span><br></pre></td></tr></table></figure></li></ol><h3 id="6-进程相关"><a href="#6-进程相关" class="headerlink" title="6. 进程相关"></a>6. 进程相关</h3><h5 id="1-ps命令"><a href="#1-ps命令" class="headerlink" title="1. ps命令"></a>1. ps命令</h5><p>ps命令用于报告当前系统的进程状态。可以搭配kill指令随时中断、删除不必要的程序。 </p><p><u>常用选项</u>包括：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ps -</span><br><span class="line">1、-a显示所有用户的进程</span><br><span class="line">2、-u显示用户名和启动时间</span><br><span class="line">3、-x显示所有进程，包括没有控制终端的进程</span><br><span class="line">4、-e显示所有进程，包括没有控制终端的进程，较x选项，信息更为简略</span><br><span class="line">5、-l显示进程详细信息，按长格式显示</span><br></pre></td></tr></table></figure><p><u>常用组合</u></p><table><thead><tr><th><strong>ps -au</strong> 显示所有用户进程，并给出用户名和启动时间等详细信息</th></tr></thead><tbody><tr><td><strong>ps -aux</strong> 显示所有用户进程，包括没有控制终端的进程，并给出用户和和启动埋单等详细信息</td></tr><tr><td><strong>ps -el</strong> 按长格式显示进程详细信息</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 上述命令可能出现的字段含义</span></span><br><span class="line">USER: 进程所有者</span><br><span class="line">PID: 进程号</span><br><span class="line">PPID: 进程的父进程ID</span><br><span class="line">%CPU:  CPU占用率</span><br><span class="line">C: 进程的CPU占用率</span><br><span class="line">%MEM: 内存占用率</span><br><span class="line">VSZ: 表示如果一个程序完全驻留在内存的话需要占用多少内存空间;</span><br><span class="line">RSS: 指明了当前实际占用了多少内存;</span><br><span class="line">TTY: 终端的次要装置号码 (minor device number of tty)</span><br><span class="line">F：进程的标志</span><br><span class="line">S：进程的状态</span><br><span class="line">STAT: 该进程程的状态，有以下值</span><br><span class="line">D: 不可中断的静止</span><br><span class="line">R: 正在执行中</span><br><span class="line">S: 静止状态</span><br><span class="line">T: 暂停执行</span><br><span class="line">Z: 不存在但暂时无法消除</span><br><span class="line">W: 没有足够的记忆体分页可分配</span><br><span class="line">&lt;: 高优先序的进程</span><br><span class="line">N: 低优先序的进程</span><br><span class="line">L: 有记忆体分页分配并锁在记忆体内</span><br><span class="line">PRI：进程的优先权</span><br><span class="line">NI：进程的Nice值</span><br><span class="line">ADDR：进程的地址空间</span><br><span class="line">SZ：进程占用内存的大小</span><br><span class="line">WCHAN：进程当前是否在运行</span><br><span class="line">TTY：进程所属终端</span><br><span class="line">START: 进程开始时间</span><br><span class="line">TIME: 执行的运行时间</span><br><span class="line">COMMAND：所执行的指令</span><br><span class="line">CMD：进程的命令</span><br></pre></td></tr></table></figure><h5 id="2-kill-pidof-pkill-命令"><a href="#2-kill-pidof-pkill-命令" class="headerlink" title="2. kill / pidof / pkill 命令"></a>2. kill / pidof / pkill 命令</h5><p>有时候某个进程可能会长期占用CPU资源或无法正常执行或超出运行时间等，此时可能希望人工干预直接将进程杀死，这时候kill命令可以派上用场</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1、<span class="built_in">kill</span> pid 直接杀死进程，但不能保证一定能杀死</span><br><span class="line">2、<span class="built_in">kill</span> -9 pid 强制杀死进程</span><br><span class="line">3、pidof命令用于查看某个进程的进程号（例如：pidof mysqld）</span><br><span class="line">4、pkill命令可以按照进程名杀死进程。pkill和killall应用方法差不多，也是直接杀死运行中的程序；如果您想杀掉单个进程，请用<span class="built_in">kill</span>来杀掉</span><br></pre></td></tr></table></figure><h5 id="3-进程切换"><a href="#3-进程切换" class="headerlink" title="3. 进程切换"></a>3. 进程切换</h5><p>前台进程指的是进程在执行时会将命令行阻塞，直到进程执行完毕；后台进程指的是进程在执行时不会阻塞当前命令行，而是在系统后台执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、ctrl + c 终止进程</span><br><span class="line">2、ctrl + z 挂起进程</span><br><span class="line">3、fg命令将进程转换到前台执行</span><br><span class="line">4、bg命令将进程转换到后台执行</span><br><span class="line">5、jobs命令查看任务</span><br></pre></td></tr></table></figure><h5 id="4-top命令"><a href="#4-top命令" class="headerlink" title="4. top命令"></a>4. top命令</h5><p>top 命令可以定期显示所有正在运行和实际运行并且更新到列表中，它显示出 CPU 的使用、内存的使用、交换内存、缓存大小、缓冲区大小、过程控制、用户和更多命令。它也会显示内存和 CPU 使用率过高的正在运行的进程。</p><p>按q键退出查看.</p><h5 id="5-pstree命令"><a href="#5-pstree命令" class="headerlink" title="5. pstree命令"></a>5. pstree命令</h5><p>将进程间的关系以树结构的形式展示，能清楚看各进程之间的父子关系</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pstree ：以树状形式显示进程</span><br><span class="line">pstree -p ： 以树状形式显示进程，并且显示进程号</span><br></pre></td></tr></table></figure><h5 id="6-JPS命令"><a href="#6-JPS命令" class="headerlink" title="6. JPS命令"></a>6. JPS命令</h5><p>JPS命令是JDK提供的一个检查系统是否启动了JVM进程的一个进程。不是linux系统自带的。主要任务就是用来检查java进程的。</p><h3 id="7-计划任务"><a href="#7-计划任务" class="headerlink" title="7. 计划任务"></a>7. 计划任务</h3><h5 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h5><p>计划任务在Linux的体现主要分为at和crontab，其中：</p><ul><li><strong>at</strong>：通过at命令安排任务在某一时刻执行一次</li><li><strong>crontab</strong>：通过crontab 命令，我们可以在固定的间隔时间执行指定的系统指令或 shell script脚本。时间间隔的单位可以是分钟、小时、日、月、周及以上的任意组合。这个命令非常适合周期性的日志分析或数据备份等工作。</li></ul><h5 id="命令服务管理crontab"><a href="#命令服务管理crontab" class="headerlink" title="命令服务管理crontab"></a>命令服务管理crontab</h5><p>在CentOS系统上，crontab服务的名称叫做<strong>crond</strong></p><ol><li><p>安装</p><p><code>yum -y install crontabs</code></p></li><li><p>服务操作说明</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">service crond start <span class="comment">#启动服务</span></span><br><span class="line">service crond stop   <span class="comment">#关闭服务</span></span><br><span class="line">service crond restart <span class="comment">#重启服务</span></span><br><span class="line">service crond reload <span class="comment">#重新载入配置</span></span><br><span class="line">service crond status <span class="comment">#服务状态</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看crontab服务是否已设置为开机启动，执行命令：</span></span><br><span class="line">chkconfig --list</span><br><span class="line"></span><br><span class="line"><span class="comment">#加入开机自动启动：</span></span><br><span class="line">chkconfig --level 35 crond on</span><br></pre></td></tr></table></figure></li></ol><h5 id="crontab功能使用"><a href="#crontab功能使用" class="headerlink" title="crontab功能使用"></a>crontab功能使用</h5><ul><li><p>命令格式    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">crontab [-u user] file</span><br><span class="line">crontab [-u user] [ -e | -l | -r ]</span><br><span class="line"></span><br><span class="line"><span class="comment"># crontab 参数说明：</span></span><br><span class="line">-u user：用来设定某个用户的crontab服务，例如，”-u ixdba”表示设定ixdba用户的crontab服务，此参数一般有root用户来运行。</span><br><span class="line">file：file是命令文件的名字,表示将file做为crontab的任务列表文件并载入crontab。</span><br><span class="line">-e：编辑某个用户的crontab文件内容。如果不指定用户，则表示编辑当前用户的crontab文件。</span><br><span class="line">-l：显示某个用户的crontab文件内容，如果不指定用户，则表示显示当前用户的crontab文件内容。</span><br><span class="line">-r：删除定时任务配置，从/var/spool/cron目录中删除某个用户的crontab文件，如果不指定用户，则默认删除当前用户的crontab文件。</span><br><span class="line">-i：在删除用户的crontab文件时给确认提示。</span><br><span class="line"></span><br><span class="line"><span class="comment"># 命令示例：</span></span><br><span class="line">crontab file [-u user]<span class="comment">## 用指定的文件替代目前的crontab。 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 必须掌握：</span></span><br><span class="line">crontab -l [-u user]<span class="comment">## 列出用户目前的crontab. </span></span><br><span class="line">crontab -e [-u user]<span class="comment">## 编辑用户目前的crontab.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过crontab添加的计划任务都会存储在/var/spool/cron/目录里</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前服务状态</span></span><br><span class="line">service crond status</span><br><span class="line"><span class="comment"># 操作服务</span></span><br><span class="line">/sbin/service crond start    //启动服务</span><br><span class="line">/sbin/service crond stop     //关闭服务</span><br><span class="line">/sbin/service crond restart  //重启服务</span><br><span class="line">/sbin/service crond reload   //重新载入配置</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看开机启动服务</span></span><br><span class="line">ntsysv  <span class="comment"># 退出时, 按tab切换</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加入开机自动启动</span></span><br><span class="line">chkconfig –level 35 crond on</span><br></pre></td></tr></table></figure></li><li><p>配置说明</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基本格式 : </span></span><br><span class="line">*　　*　　*　　*　　*　　<span class="built_in">command</span> </span><br><span class="line">分　 时　 日　 月　 周　 命令 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 每个小时的第几分钟执行该任务. 其它的类似</span></span><br><span class="line">第1列表示分钟1～59 每分钟用*或者 */1表示  </span><br><span class="line"></span><br><span class="line">第2列表示小时0～23（0表示0点） 7-9表示：8点到10点之间</span><br><span class="line">第3列表示日期1～31 </span><br><span class="line">第4列表示月份1～12 </span><br><span class="line">第5列标识号星期0～6（0表示星期天） </span><br><span class="line">第6列要运行的命令</span><br><span class="line"></span><br><span class="line"><span class="comment"># 记住几个特殊符号的含义:</span></span><br><span class="line">“*”代表取值范围内的数字,</span><br><span class="line">“/”代表”每”,</span><br><span class="line">“-”代表从某个数字到某个数字,</span><br><span class="line">“,”分开几个离散的数字</span><br></pre></td></tr></table></figure></li><li><p>配置示例 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># *　　*　　*　　*　　*　　command </span></span><br><span class="line"><span class="comment"># 分　 时　 日　 月　 周　 命令 </span></span><br><span class="line"></span><br><span class="line">*/1 * * * * date &gt;&gt; /root/date.txt</span><br><span class="line">上面的例子表示每分钟执行一次date命令</span><br><span class="line">可用 tail -f查看</span><br><span class="line"></span><br><span class="line">30 21 * * * /usr/<span class="built_in">local</span>/etc/rc.d/httpd restart</span><br><span class="line">上面的例子表示每晚的21:30重启apache</span><br><span class="line"></span><br><span class="line">45 4 1,10,22 * * /usr/<span class="built_in">local</span>/etc/rc.d/httpd restart</span><br><span class="line">上面的例子表示每月1、10、22日的4 : 45重启apache</span><br><span class="line"></span><br><span class="line">10 1 * * 6,0 /usr/<span class="built_in">local</span>/etc/rc.d/httpd restart </span><br><span class="line">上面的例子表示每周六、周日的1 : 10重启apache</span><br><span class="line"></span><br><span class="line">0,30 18-23 * * * /usr/<span class="built_in">local</span>/etc/rc.d/httpd restart</span><br><span class="line">上面的例子表示在每天18 : 00至23 : 00之间每隔30分钟重启apache</span><br><span class="line"></span><br><span class="line">0 23 * * 6 /usr/<span class="built_in">local</span>/etc/rc.d/httpd restart</span><br><span class="line">上面的例子表示每星期六的11 : 00 pm重启apache</span><br><span class="line"></span><br><span class="line">* */1 * * * /usr/<span class="built_in">local</span>/etc/rc.d/httpd restart</span><br><span class="line">上面的例子每一小时重启apache</span><br><span class="line"></span><br><span class="line">* 23-7/1 * * * /usr/<span class="built_in">local</span>/etc/rc.d/httpd restart</span><br><span class="line">上面的例子晚上11点到早上7点之间，每隔一小时重启apache</span><br><span class="line"></span><br><span class="line">0 11 4 * mon-wed /usr/<span class="built_in">local</span>/etc/rc.d/httpd restart</span><br><span class="line">上面的例子每月的4号与每周一到周三的11点重启apache</span><br><span class="line"></span><br><span class="line">0 4 1 jan * /usr/<span class="built_in">local</span>/etc/rc.d/httpd restart </span><br><span class="line">上面的例子一月一号的4点重启apache</span><br></pre></td></tr></table></figure></li><li><p><a href="https://app.yinxiang.com/shard/s37/nl/7399077/5e22b58a-8b06-41e5-ad17-6fe24502cc0d/" target="_blank" rel="noopener">更详细的见这里</a></p></li></ul><h3 id="8-Linux虚拟主机集群测试环境基本搭建"><a href="#8-Linux虚拟主机集群测试环境基本搭建" class="headerlink" title="8. Linux虚拟主机集群测试环境基本搭建"></a>8. Linux虚拟主机集群测试环境基本搭建</h3><h5 id="1-复制原本的虚拟主机"><a href="#1-复制原本的虚拟主机" class="headerlink" title="1. 复制原本的虚拟主机"></a>1. 复制原本的虚拟主机</h5><ol><li>复制虚拟主机1到2</li><li><p>按照原虚拟主机的root用户名&amp;密码登录2</p><h5 id="2-修改新机网卡"><a href="#2-修改新机网卡" class="headerlink" title="2. 修改新机网卡"></a>2. 修改新机网卡</h5></li><li><p>修改网卡<code>vi /etc/udev/rules.d/70-persistent-net.rules</code>, 删除<code>eth0</code>所在的整个段落, 把下面的<code>eth1</code>改为<code>eth0</code>, 保存退出</p></li><li><p>修改网卡配置<code>vi /etc/sysconfig/network-scripts/ifcfg-eth0</code>, 如果有<code>UUID, HARDDR</code>, 删掉,  <code>IPADDR</code>改为与原虚拟主机不同的地址, 但要在同一网段, <code>BOOTPROTO</code>改为<code>static</code></p><h5 id="3-修改新机hostname"><a href="#3-修改新机hostname" class="headerlink" title="3. 修改新机hostname"></a>3. 修改新机hostname</h5></li><li><p>修改<strong><em>hostname</em></strong>,  <code>/etc/sysconfig/network</code>, 把<code>HOSTNAME</code>改为要修改的名字</p><h5 id="4-免密登录"><a href="#4-免密登录" class="headerlink" title="4. 免密登录"></a>4. 免密登录</h5></li><li><p>新机生成自己公钥 <code>ssh-kepygen</code>, 注意: 如果原本主机中已经生成, 此处在提示<code>verwrite (y/n)?</code>的时候要选择y, 才会重新生成覆盖</p></li><li><p>把新主机公钥发送给其它机器 <code>ssh-copy-id root@xxx(其它主机ip)</code>, 此命令相当于 下面2条命令的效果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat id_rsa.pub &gt; authorized_keys</span><br><span class="line">scp -r authorized_keys root@192.168.123.202:/root/.ssh/</span><br></pre></td></tr></table></figure></li><li><p>其他主机也把公钥发给新主机, 此时就可以实现主机间的免密登录了.</p></li></ol><h5 id="5-功能增强-可选"><a href="#5-功能增强-可选" class="headerlink" title="5. 功能增强(可选)"></a>5. 功能增强(可选)</h5><ol><li>可以在 每台机器中设置<strong><em>host</em></strong>别名, <code>vi /etc/hosts</code>,  加上<code>xxx.xxx.xx.xxx  cts1/2/3...</code>, 这样在访问其他主机时, 可以直接用别名替代域名</li><li>如果是用的<code>zsh</code>的<strong><em>shell</em></strong>,  可以在所有主机的 <code>~.zshrc</code>中, 添加<code>alias login1=&#39;ssh root@cts1&#39; &gt;&gt; ~/.zshrc</code>, 这样可以直接 用 <code>login1</code>登录到对应的主机.</li></ol><hr><h3 id="9-安装-使用-zsh-amp-oh-my-zsh-amp-相关插件"><a href="#9-安装-使用-zsh-amp-oh-my-zsh-amp-相关插件" class="headerlink" title="9. 安装, 使用 zsh &amp; oh-my-zsh &amp;相关插件"></a>9. 安装, 使用 zsh &amp; oh-my-zsh &amp;相关插件</h3><h4 id="主骨架安装-amp-介绍"><a href="#主骨架安装-amp-介绍" class="headerlink" title="主骨架安装&amp;介绍"></a>主骨架安装&amp;介绍</h4><ol><li><p>安装zsh套件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install zsh -y</span><br></pre></td></tr></table></figure></li><li><p>安装 oh-my-zsh套件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">"<span class="variable">$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)</span>"</span></span><br></pre></td></tr></table></figure></li><li><p>zsh 的一些基本配置操作, <a href="#zsh常用插件安装">常用插件安装见这里!</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看oh-my-zsh 的主题</span></span><br><span class="line">ls ~/.oh-my-zsh/themes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以更改为random, 这样会随机显示, 很有乐趣, 直接输入zsh也会切换</span></span><br><span class="line">vi ~/.zshrc</span><br><span class="line">ZSH_THEME=<span class="string">"random"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加plugin, 按照对应方式安装</span></span><br><span class="line">plugins=(git ... ... )</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置zsh为默认的shell</span></span><br><span class="line">chsh -s /bin/zsh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加alias 到 ~/.zshrc</span></span><br><span class="line"><span class="built_in">alias</span> vi=<span class="string">'vim'</span></span><br><span class="line"><span class="built_in">alias</span> zshconfig=<span class="string">'vi ~/.zshrc'</span></span><br><span class="line"><span class="built_in">alias</span> vimconfig=<span class="string">'vi ~/.vimrc'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载 oh-my-zsh</span></span><br><span class="line">uninstall_oh_my_zsh zsh</span><br></pre></td></tr></table></figure></li><li><p><strong>zsh 的一些骚气操作</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1. 兼容 bash, 这个就不用说了</span><br><span class="line">2. 输入某条命令, 比如 cat, 然后用上下键, 可以翻阅所有执行过的命令</span><br><span class="line">3. 各种补全, 输入任何命令, 按 2下 tab键, 下面会出现所有可能的补全, 可以 tab, 或 上下左右切换.</span><br><span class="line">4. 比如要杀掉进程java, 原来是需要  ps aux | grep java, 查进程的 PID，然后<span class="built_in">kill</span> PID; 现在只需要 <span class="built_in">kill</span> java, 然后按下 tab, java会被替换为 对应的 PID, 点回车, <span class="built_in">kill</span> !</span><br><span class="line">5. 目录浏览和跳转, 输入 d, 可以列出在这个回话中访问过的目录列表, 再输入列表前的序号, 即可直接跳转.</span><br><span class="line">6. 在当前目录下输入 .. 或 ... , 或者直接输入目录名, 都可以直接跳转, 甚至都不需要使用 <span class="built_in">cd</span>命令了.</span><br><span class="line">7. 通配符搜索：ls -l */.sh，可以递归显示当前目录下的 shell 文件，文件少时可以代替 find，文件太多就歇菜了.</span><br></pre></td></tr></table></figure></li><li><p><a href="https://github.com/robbyrussell/oh-my-zsh/wiki/themes" target="_blank" rel="noopener">zsh主题介绍</a>, <a href="https://github.com/robbyrussell/oh-my-zsh/wiki/Plugins" target="_blank" rel="noopener">zsh插件介绍</a></p></li></ol><hr><h4 id="zsh常用插件安装"><a href="#zsh常用插件安装" class="headerlink" title="zsh常用插件安装"></a><strong>zsh常用插件安装</strong></h4><h5 id="安装-zsh-autosuggestions"><a href="#安装-zsh-autosuggestions" class="headerlink" title="安装 zsh-autosuggestions"></a><a href="https://github.com/zsh-users/zsh-autosuggestions/blob/master/INSTALL.md" target="_blank" rel="noopener">安装 <code>zsh-autosuggestions</code></a></h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">方式1: </span><br><span class="line"><span class="comment"># 下载到本地</span></span><br><span class="line">git <span class="built_in">clone</span> git://github.com/zsh-users/zsh-autosuggestions ~/.zsh/zsh-autosuggestions</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加到.zshrc, 这样就不用每次source了</span></span><br><span class="line">添加 <span class="built_in">source</span> ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh 到 .zshrc 尾部</span><br><span class="line">plugins=() 中添加上 zsh-autosuggestions, 用空格隔开即可</span><br><span class="line"></span><br><span class="line">======================</span><br><span class="line">方式2: 官方建议</span><br><span class="line"><span class="comment"># 少了添加source到 ~/.zshrc这一步, 猜想是会按照默认的路径加载? </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.Clone this repository into $ZSH_CUSTOM/plugins (by default ~/.oh-my-zsh/custom/plugins)</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.Add the plugin to the list of plugins for Oh My Zsh to load:</span></span><br><span class="line">plugins=(zsh-autosuggestions)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.Start a new terminal session.</span></span><br></pre></td></tr></table></figure><p>#####<a href="https://github.com/wting/autojump" target="_blank" rel="noopener">安装 <code>autojump</code></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载到本地</span></span><br><span class="line">git <span class="built_in">clone</span> git://github.com/joelthelion/autojump.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行安装脚本</span></span><br><span class="line"><span class="built_in">cd</span> autojump</span><br><span class="line">./install.py</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装完成在~/下面有.autojump目录, 在.zshrc中加一句</span></span><br><span class="line">[[ -s ~/.autojump/etc/profile.d/autojump.sh ]] &amp;&amp; . ~/.autojump/etc/profile.d/autojump.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 接下来可以愉悦的使用 j 了</span></span><br></pre></td></tr></table></figure><h5 id="安装-zsh-syntax-highlighting"><a href="#安装-zsh-syntax-highlighting" class="headerlink" title="安装 zsh-syntax-highlighting "></a><a href="https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/INSTALL.md" target="_blank" rel="noopener">安装 <strong><code>zsh-syntax-highlighting</code></strong> </a></h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 到 ~/.zshrc 目录, 克隆仓库</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># source the script 到 ~/.zshrc</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"source <span class="variable">$&#123;(q-)PWD&#125;</span>/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"</span> &gt;&gt; <span class="variable">$&#123;ZDOTDIR:-$HOME&#125;</span>/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在当前 shell生效</span></span><br><span class="line"><span class="built_in">source</span> ./zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-系统服务管理&quot;&gt;&lt;a href=&quot;#1-系统服务管理&quot; class=&quot;headerlink&quot; title=&quot;1. 系统服务管理&quot;&gt;&lt;/a&gt;1. 系统服务管理&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;检查本机&lt;code&gt;httpd&lt;/code&gt;服务是否开启, 使用命令&lt;cod
      
    
    </summary>
    
      <category term="Linux" scheme="https://airpoet.github.io/categories/Linux/"/>
    
      <category term="学习笔记" scheme="https://airpoet.github.io/categories/Linux/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="原创" scheme="https://airpoet.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="技术" scheme="https://airpoet.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="Linux" scheme="https://airpoet.github.io/tags/Linux/"/>
    
  </entry>
  
</feed>
